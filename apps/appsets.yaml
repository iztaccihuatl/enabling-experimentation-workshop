apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: preview-clusters
  namespace: argocd
spec:
  generators:
    - pullRequest:
        gitea:
          owner: root
          repo: demo
          api: http://gitea.localhost/
          insecure: true
        requeueAfterSeconds: 5
  template:
    metadata:
      name: 'pr-{{number}}-{{branch_slug}}'
      labels:
        preview/env: 'pr-{{number}}-{{branch_slug}}'
      annotations:
        git/sha: '{{head_sha}}'
        git/branch: '{{branch}}'
        scm/pull-request: '{{number}}'
        scm/branch_slug: '{{branch_slug}}'
    spec:
      source:
        repoURL: https://charts.loft.sh
        chart: vcluster
        targetRevision: v0.15.7
        helm:
          releaseName: pr-{{number}}-{{branch_slug}}
          values: |
            sync:
              ingresses:
                enabled: true
            storage:
              persistence: false
            syncer:
              extraArgs:
                - --out-kube-config-secret=pr-{{number}}-{{branch_slug}}
            init:
              manifests: |-
                apiVersion: rbac.authorization.k8s.io/v1
                kind: ClusterRoleBinding
                metadata:
                  name: code-server-admin
                roleRef:
                  apiGroup: rbac.authorization.k8s.io
                  kind: ClusterRole
                  name: cluster-admin
                subjects:
                - kind: ServiceAccount
                  name: code-server
                  namespace: code-server

      project: default
      destination:
        server: https://kubernetes.default.svc
        namespace: gitlab
      syncPolicy:
        automated:
          prune: true

---

apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: podinfo-preview
  namespace: argocd
spec:
  generators:
    - clusters:
        selector:
          matchLabels:
            argocd.argoproj.io/secret-type: cluster
  template:
    metadata:
      name: 'podinfo-preview-{{nameNormalized}}'
      labels:
        preview/env: '{{metadata.labels.preview/env}}'
    spec:
      source:
        repoURL: http://gitea.localhost/root/demo.git
        path: podinfo/preview
        targetRevision: '{{metadata.annotations.git/branch}}'
        kustomize:
          commonAnnotations:
            preview/domain: '{{nameNormalized}}.localhost'
      project: default
      destination:
        server: '{{server}}'
        namespace: podinfo
      syncPolicy:
        automated:
          prune: true
        retry:
          limit: -1
          backoff:
            duration: 5s
            maxDuration: 10s

---

apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: code-server
  namespace: argocd
spec:
  generators:
    - clusters:
        selector:
          matchLabels:
            argocd.argoproj.io/secret-type: cluster
  template:
    metadata:
      name: 'code-server-{{nameNormalized}}'
      labels:
        preview/env: '{{metadata.labels.preview/env}}'
    spec:
      project: default
      destination:
        server: '{{server}}'
        namespace: code-server
      syncPolicy:
        automated:
          prune: true
        retry:
          limit: -1
          backoff:
            duration: 5s
            maxDuration: 10s
        syncOptions:
          - CreateNamespace=true
      sources:
        - repoURL: https://github.com/coder/code-server
          path: ci/helm-chart
          targetRevision: v4.16.1
          helm:
            releaseName: code-server
            values: |
              password: '{{metadata.annotations.git/sha}}'
              ingress:
                enabled: true
                hosts:
                  - host: 'code.{{nameNormalized}}.localhost'
                    paths:
                      - /
              persistence:
                enabled: false
              extraVars:
                - name: DISABLE_TELEMETRY
                  value: 'true'
