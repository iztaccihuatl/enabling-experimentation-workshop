# https://taskfile.dev

version: '3'

includes:
  tools:
    taskfile: Taskfile.tools.yml
    internal: true

vars:
  DEFAULT_VCLUSTER_NAMESPACE: "gitlab"
  VCLUSTER_NAME: '{{.VCLUSTER_NAME | default "test-cluster"}}'
  VCLUSTER_SAN: '{{.VCLUSTER_NAME}}.vcluster.localhost'

tasks:
  list:
    desc: "List all vclusters"
    deps:
      - task: tools:ensure-vcluster
    cmds:
      - vcluster list

  create:
    desc: "Start the vcluster"
    deps:
      - task: tools:ensure-vcluster
    cmds:
      - |
        cat > /tmp/vcluster.yaml <<EOF
        sync:
          ingresses:
            enabled: true
        syncer:
          extraArgs:
            - --tls-san={{.VCLUSTER_SAN}}
        EOF

      - |
        vcluster create {{.VCLUSTER_NAME}} \
          --namespace={{.DEFAULT_VCLUSTER_NAMESPACE}} \
          --upgrade \
          --connect=false \
          --update-current=false \
          -f /tmp/vcluster.yaml

    status:
      - vcluster list --namespace={{.DEFAULT_VCLUSTER_NAMESPACE}} | grep {{.VCLUSTER_NAME}}

  connect:
    desc: "Connect to the running vcluster"
    deps:
      - task: tools:ensure-vcluster
    cmds:
      - vcluster connect {{if .CI}}--server={{.VCLUSTER_NAME}}{{end}} --namespace={{.DEFAULT_VCLUSTER_NAMESPACE}} {{.VCLUSTER_NAME}}

  disconnect:
    desc: "Disconnect from the current vcluster"
    deps:
      - task: tools:ensure-vcluster
    cmds:
      - vcluster disconnect

  delete:
    desc: "Delete the vcluster"
    deps:
      - task: tools:ensure-vcluster
    cmds:
      - vcluster delete --namespace={{.DEFAULT_VCLUSTER_NAMESPACE}} {{.VCLUSTER_NAME}}

  expose:
    desc: "Expose this vcluster and print the kubeconfig that can be used to connect to it externally"
    deps:
      - task: tools:ensure-vcluster
    vars:
      VCLUSTER_SERVICE_UID:
        sh: kubectl -n {{.DEFAULT_VCLUSTER_NAMESPACE}} get service {{.VCLUSTER_NAME}} -o jsonpath='{.metadata.uid}'
    cmds:
      - |
        kubectl apply -f - <<EOF
          apiVersion: traefik.containo.us/v1alpha1
          kind: IngressRouteTCP
          metadata:
            name: {{.VCLUSTER_NAME}}
            namespace: {{.DEFAULT_VCLUSTER_NAMESPACE}}
            ownerReferences:
              - apiVersion: v1
                blockOwnerDeletion: true
                kind: Service
                name: "{{.VCLUSTER_NAME}}"
                uid: "{{.VCLUSTER_SERVICE_UID}}"
          spec:
            routes:
            - match: HostSNI(\`{{.VCLUSTER_SAN}}\`)
              services:
              - name: {{.VCLUSTER_NAME}}
                port: 443
            tls:
              passthrough: true
        EOF

      - vcluster connect --update-current=false --server={{.VCLUSTER_SAN}} {{.VCLUSTER_NAME}}
      - cat kubeconfig.yaml
