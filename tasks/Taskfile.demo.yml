# https://taskfile.dev

version: '3'

includes:
  tools: 
    taskfile: Taskfile.tools.yml
    internal: true

tasks:
  up:
    desc: "Setup the demo"
    cmds:
      - task: create
      - task: deploy-argocd
      - task: setup-github-secrets
      - task: setup-cloudflare-secrets

  down:
    desc: "Take down the cluster and everything in it"
    cmds:
      - k3d cluster delete

  create:
    internal: true
    desc: "Start the cluster"
    cmds:
      - k3d cluster create --config k3d-config.yaml
      - until kubectl wait --for condition=ready pods -l k8s-app=kube-dns -n kube-system; do sleep 2; done
    status:
      - k3d cluster list --no-headers | grep k3s-default > /dev/null

  deploy-argocd:
    internal: true
    desc: "Deploy ArgocD and its apps"
    cmds:
      - kubectl apply -k argocd
      - kubectl wait --for condition=established crds/applications.argoproj.io --timeout 300s
      - kubectl apply -f argocd/app-of-apps.yaml

  setup-github-secrets:
    internal: false
    desc: Setup secrets used by ArgoCD to access github.
    requires:
      vars:
        - GITHUB_APP_ID
        - GITHUB_APP_INSTALLATION_ID
        - GITHUB_APP_PRIVATE_KEY_FILE
        - GITHUB_REPO
    cmds:
      - |
        kubectl create secret generic github-credentials \
          -n argocd \
          --from-literal=type=git \
          --from-literal=url={{.GITHUB_REPO}} \
          --from-literal=githubAppID={{.GITHUB_APP_ID}} \
          --from-literal=githubAppInstallationID={{.GITHUB_APP_INSTALLATION_ID}} \
          --from-file=githubAppPrivateKey={{.GITHUB_APP_PRIVATE_KEY_FILE}}

      - |
        kubectl create secret generic argocd-notifications-secret \
          -n argocd \
          --from-file=github-private-key={{.GITHUB_APP_PRIVATE_KEY_FILE}}

      - kubectl -n argocd label secret github-credentials argocd.argoproj.io/secret-type=repo-creds

  setup-cloudflare-secrets:
    internal: false
    desc: Setup secrets used by cloudflare to provide a tunnel.
    requires:
      vars:
        - CLOUDFLARE_CREDENTIALS_FILE
    cmds:
      - until kubectl get ns cloudflare; do sleep 2; done
      - kubectl create secret generic tunnel-credentials -n cloudflare --from-file=credentials.json={{.CLOUDFLARE_CREDENTIALS_FILE}}

  slides:
    desc: "Start the slides"
    dir: slides
    deps:
      - task: tools:ensure-slides-dependencies
    cmds:
      - ./bin/slides slides.md

