stages:
  - create-env
  - build
  - deploy
  - delete-env

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

image: python:3.9

before_script:
  - |
    if ! command -v task ; then
      export DEBIAN_FRONTEND=noninteractive
      apt-get -qq update && apt-get -qqy install git curl > /dev/null
      sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b /usr/local/bin
    fi

create-env:
  stage: create-env
  environment:
    name: preview/$CI_MERGE_REQUEST_IID-$CI_COMMIT_REF_SLUG
    url: http://$CI_ENVIRONMENT_SLUG.localhost/
    action: start
    on_stop: delete-env
    auto_stop_in: 1 hour
  variables:
    VCLUSTER_NAME: $CI_ENVIRONMENT_SLUG
  script:
    - task create-env

build-pipeline:
  stage: build
  needs: []
  script:
    - task build-pipeline
  artifacts:
    paths:
      - pipeline.yaml

deploy-pipeline:
  stage: deploy
  needs:
    - build-pipeline
    - create-env
  environment:
    name: preview/$CI_MERGE_REQUEST_IID-$CI_COMMIT_REF_SLUG
    url: http://$CI_ENVIRONMENT_SLUG.localhost/
    action: access
  variables:
    VCLUSTER_NAME: $CI_ENVIRONMENT_SLUG
  script:
    - task deploy-pipeline

delete-env:
  stage: delete-env
  when: manual
  environment:
    name: preview/$CI_MERGE_REQUEST_IID-$CI_COMMIT_REF_SLUG
    action: stop
  variables:
    VCLUSTER_NAME: $CI_ENVIRONMENT_SLUG
  script:
    - task delete-env
